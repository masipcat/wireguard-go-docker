http {
    include /etc/ng/conf.d/http.conf;

    {{- if has . "include " }}
    {{- range .include -}}
    include .;
    {{- end -}}
    {{- end }}


    {{- if has . "log_format" }}
    log_format main {{ .log_format }};
    {{ else }}
    log_format main
        '$host - $remote_addr - $http_x_real_ip - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for" '
        '$request_time';
    {{- end }}

    # Sets the path, format, and configuration for a buffered log write.
    access_log /var/log/nginx/access.log main;

    {{- if has . "allowed_ips" }}
        {{- with .allowed_ips -}}
        {{- template "/etc/ng/templates/http.geo.conf" . }}
        {{- end -}}
    {{- end }}

    # Gzipping of responses.
    gzip "{{ if has . "gzip" }}{{ .gzip }}{{ else }}on{{ end }}";

    {{- if has . "root" }}
    # public root directory
    root {{ .root }};
    {{- end -}}

    {{- if has . "access" }}
    {{ template "/etc/ng/templates/access.conf" .access }}
    {{- end -}}

    {{ if has . "server" }}
        {{- range .server -}}
            {{- $outPath := printf "/etc/nginx/http.d/%s.conf" .name -}}
            {{- tmpl.Exec "/etc/ng/templates/server.conf" . | file.Write $outPath -}}
        {{- end -}}
    {{ else }}
    server {
        listen 80 default_server;
        location / {
            return 444;
        }
    }
    {{ end }}

    # Includes virtual hosts configs.
    include /etc/nginx/http.d/*.conf;
}
